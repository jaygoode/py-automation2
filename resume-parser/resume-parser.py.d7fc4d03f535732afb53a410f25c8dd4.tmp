import spacy
import pdfminer
import re
import os
import pandas as pd
import pdf2txt

#convert pdf to text

def conver_pdf(f):
    output_filename = os.path.basename(os.path.splitext(f)[0])+".txt"
    output_filepath = os.path.join("output/txt/", output_filename)
    pdf2txt.main(args=[f, "--outfile", output_filepath]) #pdf to text and save to location
    print(output_filepath + " saved successfully.")
    return open(output_filepath).read()

#load language model
nlp = spacy.load("en_core_web_sm")

result_dict = {'name':[], 'phone':[], 'email':[], 'skills':[]}
names=[]
phones=[]
emails=[]
skills=[]

def parse_content(text):
    skillset = re.compile("python|java|sql|hadoop|tableu")
    phone_num = re.compile(
        '(\d{3}[-\.\s]??\d{3}[-\.\s]??\d{4}|\(\d{3}\)\s*\d{3}[-\.\s]??\d{4}|\d{3}[-\.\s]??\d{4})'
    )
    doc = nlp(text)
    name = [entity.text for entity in doc.ents if entity.label_ is "PERSON"][0]  # take the entity, get the text if the entity label is PERSON
    print(name)
    email = [word for word in doc if word.like_email is True][0]
    print(email)
    phone = str(re.findAll(phone_num, text.lower()))
    skills_list = re.findall(skillset, text.lower())
    unique_skills_list = str(set(skills_list)) #convert to dict, removes duplicates
    names.append(name)
    emails.append(email)
    phones.append(phone)
    skills.append(unique_skills_list)
    print("Extraction completed sucessfully!")